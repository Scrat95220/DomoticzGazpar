---
files: ^(.*\.(py|json|md|sh|yaml|cfg|txt))$
exclude: ^(\.[^/]*cache/.*)$
repos:
  - repo: https://github.com/executablebooks/mdformat
    # Do this before other tools "fixing" the line endings
    rev: 0.7.16
    hooks:
      - id: mdformat
        stages: [manual]  # Require to run this manually
        name: Format Markdown
        entry: mdformat  # Executable to run, with fixed options
        language: python
        types: [markdown]
        args: [--wrap, '75', --number]
        additional_dependencies:
          - mdformat-toc
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: no-commit-to-branch
        args: [--branch, main]
      - id: check-yaml
        args: [--unsafe]
      - id: debug-statements
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-json
      - id: mixed-line-ending
      - id: check-builtin-literals
      - id: check-ast
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-docstring-first
      - id: fix-byte-order-marker
      - id: check-case-conflict
      # - id: check-toml
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.28.0
    hooks:
      - id: yamllint
        args:
          - --no-warnings
          - -d
          - '{extends: relaxed, rules: {line-length: {max: 90}}}'
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.2.0
    hooks:
      - id: pyupgrade
        stages: [manual]  # Require to run this manually
        args:
          - --py37-plus
  - repo: https://github.com/psf/black
    rev: 22.10.0
    hooks:
      - id: black
        stages: [manual]  # Require to run this manually
        args:
          - --safe
          - --quiet
          - -l 79
  - repo: https://github.com/Lucas-C/pre-commit-hooks-bandit
    rev: v1.0.6
    hooks:
      - id: python-bandit-vulnerability-check
        args: [--skip, 'B110,B404,B603', --recursive, .]

  - repo: https://github.com/fsouza/autoflake8
    rev: v0.4.0
    hooks:
      - id: autoflake8
        stages: [manual]  # Require to run this manually
        args:
          - -i
          - -r
          - --expand-star-imports
          - custom_components
  - repo: https://github.com/PyCQA/flake8
    rev: 5.0.4
    hooks:
      - id: flake8
        stages: [manual]  # Require to run this manually
        additional_dependencies:
          - pyproject-flake8==0.0.1a2
          - flake8-bugbear==22.1.11
          - flake8-comprehensions==3.8.0
          - flake8_2020==1.6.1
          - mccabe==0.6.1
          - pycodestyle==2.8.0
          - pyflakes==2.4.0
  - repo: https://github.com/PyCQA/isort
    rev: 5.10.1
    hooks:
      - id: isort
        stages: [manual]  # Require to run this manually
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.2
    hooks:
      - id: codespell
        stages: [manual]  # Require to run this manually
        args:
          - --ignore-words-list=hass
          - --skip="./.*"
          - --quiet-level=2
  - repo: https://github.com/pre-commit/mirrors-pylint
    rev: v3.0.0a5
    hooks:
      - id: pylint
        additional_dependencies:
        - hassapi
        - pyflakes
        args:
          - --reports=no
        #exclude: ^$
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.982
    hooks:
      - id: mypy
        args:
          - --ignore-missing-imports
          - --install-types
          - --non-interactive
          - --check-untyped-defs
          - --show-error-codes
          - --show-error-context
